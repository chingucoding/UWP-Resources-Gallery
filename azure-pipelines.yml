# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Debug'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'
stages:
  - stage: Build
    jobs:
      - job: Build_Artifacts
        displayName: Artifacts
        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            platform: 'x86'
            solution: '$(solution)'
            configuration: '$(buildConfiguration)'
            msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=true'
        
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'
            artifact: 'artifacts_$(buildConfiguration)_$(buildPlatform)'
            publishLocation: 'pipeline'
            
        - task: PublishBuildArtifacts@1
          inputs:
            PathtoPublish: '$(Build.ArtifactStagingDirectory)\AppxPackages\'
            ArtifactName: 'appxbundles_$(buildConfiguration)_$(buildPlatform)'
            publishLocation: 'Container'

  - stage: Testing
    dependsOn: Build
    jobs:
      - job: Unit_Tests
        displayName: Unit Tests
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'artifacts_$(buildConfiguration)_$(buildPlatform)'
              targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'
          
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Write your PowerShell commands here.
                
                Write-Host "Hello World"
                
                
                Get-ChildItem -Path $(System.DefaultWorkingDirectory) â€“Recurse

          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*ControlTests**.appxrecipe
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)'
              uiTests: true



          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                ResourceModelTests.build.appxrecipe
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)\ResourceModelTests\'
              uiTests: true

      - job: Interaction_Tests
        displayName: Interaction Tests
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'
        
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'artifacts_$(buildConfiguration)_$(buildPlatform)'
              targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'

          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'appxbundles_$(buildConfiguration)_$(buildPlatform)'
              targetPath: '$(System.DefaultWorkingDirectory)\appxbundles'

          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Find correct folder and run app install script.
                cd ./appxbundles

                $AppBundle = Get-ChildItem -Filter UWP*Test -Name
                echo $AppBundle
                cd $AppBundle
                ./Add-AppDevPackage.ps1 -Force
              errorActionPreference: 'continue'
              failOnStderr: true
              workingDirectory: '$(System.DefaultWorkingDirectory)'

          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*AppInteractionTests**.dll
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)'

  - stage: Publish
    dependsOn: Testing
    jobs:
      - job: Publish_Release
        displayName: Release Build
        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'
        - task: VSBuild@1
          inputs:
            platform: 'x86'
            solution: '$(solution)'
            configuration: 'Release'
            msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=StoreUpload /p:AppxPackageSigningEnabled=true'
        
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)\artifacts\Release\'
            artifact: 'Release_$(buildPlatform)'
            publishLocation: 'pipeline'
