# Universal Windows Platform
# Build a Universal Windows Platform project using Visual Studio.
# Add steps that test and distribute an app, save build artifacts, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Debug'
  appxPackageDir: '$(build.artifactStagingDirectory)\AppxPackages\\'

stages:
  - stage: Build
    jobs:
      - job: Build_Debug
        steps:
        - task: NuGetToolInstaller@1

        - task: NuGetCommand@2
          inputs:
            restoreSolution: '$(solution)'

        - task: VSBuild@1
          inputs:
            platform: 'x86'
            solution: '$(solution)'
            configuration: '$(buildConfiguration)'
            msbuildArgs: '/p:AppxBundlePlatforms="$(buildPlatform)" /p:AppxPackageDir="$(appxPackageDir)" /p:AppxBundle=Always /p:UapAppxPackageBuildMode=SideloadOnly /p:AppxPackageSigningEnabled=false'
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'
            artifact: 'artifacts'
            publishLocation: 'pipeline'
            
        - task: PublishBuildArtifacts@1
          inputs:
            ArtifactName: 'appxbundle'

  - stage: Test
    dependsOn: Build
    jobs:
      - job: Unit_Tests
        steps:
          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'        
        
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'artifacts'
              targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'

          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*Tests**.appxrecipe
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)'
              uiTests: true

      - job: Interaction_Tests
        steps:
          - task: PowerShell@2
            inputs:
              targetType: 'inline'
              script: |
                # Set timeout up.
                $Env:VSTEST_CONNECTION_TIMEOUT += "180"

          - task: NuGetToolInstaller@1

          - task: NuGetCommand@2
            inputs:
              restoreSolution: '$(solution)'        
        
          - task: DownloadPipelineArtifact@2
            inputs:
              buildType: 'current'
              artifactName: 'artifacts'
              targetPath: '$(System.DefaultWorkingDirectory)\artifacts\$(buildConfiguration)'

          - task: VSTest@2
            inputs:
              testSelector: 'testAssemblies'
              testAssemblyVer2: |
                **\*UWPResourcesGallery**.appx
                !**\*TestAdapter.dll
                !**\obj\**
              searchFolder: '$(System.DefaultWorkingDirectory)'

  - stage: Publish
    dependsOn: Test
    jobs:
      - job: Publish_Release
        steps:
        - task: PublishPipelineArtifact@1
          inputs:
            targetPath: '$(System.DefaultWorkingDirectory)\artifacts\Release\'
            publishLocation: 'pipeline'

